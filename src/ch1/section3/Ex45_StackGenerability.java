package ch1.section3;

public class Ex45_StackGenerability {

  // sample sequence - "123--473--", '-' represents pop operation
  public static boolean willUnderflow(String sequence) {
    int count = 0;
    for (int c : sequence.chars().toArray()) {
      char ch = (char) c;
      if (ch == '-') {
        if (--count < 0) {
          return true;
        }
      } else {
        ++count;
      }
    }
    return false;
  }

  // can this sequence be generated by pop operations if elements are always
  // pushed in order?
  public static boolean isValidSequence(int[] sequence) {
    if (sequence.length == 0) {
      return true;
    }
    Stack<Integer> stack = new Stack<>();
    int next = 0;
    for (int x : sequence) {
      if (stack.isEmpty() || stack.peek() < x) {
        while (next <= x) {
          stack.push(next++);
        }
      }
      if (stack.peek() == x) {
        stack.pop();
      } else {
        return false;
      }
    }
    return stack.isEmpty();
  }
}
